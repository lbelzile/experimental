{
  "hash": "98cdbe0767e234c90b7b918ad3d44841",
  "result": {
    "markdown": "---\ntitle: \"Multivariate analysis of variance\"\ntype: docs\neditor_options: \n  chunk_output_type: console\n---\n\n\nThe data presented in this example vignette is inspired by a study from @Anandarajan:2002, who looked at the impact of communication means through different disclosure format on the perceived risk of organization on the brink of bankruptcy in accountancy. There is a single between-subject factor for the disclore format, and three measures of the performance, ratings for the interest rate premium assessed, for the ability to service debt and that to improve profitability.\n\n## Data \n\nWe first load the data from the package and inspect the content.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(AVC02, package = \"hecedsm\")\nstr(AVC02)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClasses 'tbl_df', 'tbl' and 'data.frame':\t132 obs. of  4 variables:\n $ format       : Factor w/ 3 levels \"integrated note\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ prime        : num  0.5 1.5 0.5 0.25 1.5 1.25 2 0.5 1.5 0.5 ...\n $ debt         : int  3 4 1 4 3 3 3 5 2 2 ...\n $ profitability: int  3 2 2 5 2 2 2 3 2 3 ...\n```\n:::\n\n```{.r .cell-code}\nxtabs(~ format, data = AVC02)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nformat\n        integrated note        stand-alone note modified auditor report \n                     40                      45                      47 \n```\n:::\n:::\n\n\nThe data are unbalanced by condition. In general, we need them to be roughly balanced. The `manova` function will not be usable and we need to enforce sum-to-zero constraints to get sensible outputs, otherwise answers will be off.\n\n## Model fitting\n\nAfter having done so, we can fit the multivariate linear model with `lm` by binding columns on the left of the `~` sign to gather the response vectors.\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(contrasts = c(\"contr.sum\", \"contr.poly\"))\nmodel <- lm(cbind(prime, debt, profitability) ~ format, \n            data = AVC02)\n```\n:::\n\n\nWe can check the residual correlation matrix to see if there was a strong dependence between our measurements. The benefit of MANOVA is to be able to leverage this correlation, if any.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(resid(model))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n              prime  debt profitability\nprime          1.00 -0.40         -0.54\ndebt          -0.40  1.00          0.65\nprofitability -0.54  0.65          1.00\n```\n:::\n:::\n\n\nWe can look at the global mean for each variable and the estimated mean differences for all groups, including the reference which is omitted. It's easy to see that the mean differences sum to zero.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndummy.coef(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFull coefficients are \n                                                               \n(Intercept):             prime        1.280511                 \n                          debt        2.881521                 \n                 profitability        2.597695                 \nformat:                        integrated note stand-alone note\n                         prime    -0.099261229     -0.013844563\n                          debt     0.068479117     -0.059298660\n                 profitability     0.127304965      0.002304965\n                                       \n(Intercept):                           \n                                       \n                                       \nformat:         modified auditor report\n                            0.113105792\n                           -0.009180457\n                           -0.129609929\n```\n:::\n:::\n\n\n## Multivariate analysis of variance\n\nNext, we compute the multivariate analysis of variance table and the follow-up with the univariate functions. By default, we can add a multiplicity correction for the tests, using Holm-Bonferonni with option `'holm'`. For the MANOVA test, there are multiple statistics to pick from, including `Pillai`, `Wilks`, `Hotelling-Lawley` and `Roy`. The default is `Pillai`, which is more robust to departures from the model hypothesis, but `Wilks` is also popular choice among practitioners.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Manova(model, test = \"Pillai\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nType II MANOVA Tests: Pillai test statistic\n       Df test stat approx F num Df den Df Pr(>F)\nformat  2   0.02581  0.55782      6    256 0.7637\n```\n:::\n:::\n\n\n## Effect sizes\n\nWe can compute effect sizes overall for the MANOVA statistic using the correspondance with the $F$ distribution, and also the individual effect size variable per variable. Here, the values returned are partial $\\widehat{\\eta}^2$ measures.\n\n::: {.cell}\n\n```{.r .cell-code}\neffectsize::eta_squared(car::Manova(model))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Effect Size for ANOVA (Type II)\n\nParameter | Eta2 (partial) |       95% CI\n-----------------------------------------\nformat    |           0.01 | [0.00, 1.00]\n\n- One-sided CIs: upper bound fixed at [1.00].\n```\n:::\n\n```{.r .cell-code}\n# Since it's a one-way between-subject MANOVA, no partial measure\neffectsize::eta_squared(model, partial = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Effect Size for ANOVA (Type I)\n\nResponse      | Parameter |     Eta2 |       95% CI\n---------------------------------------------------\nprime         |    format |     0.01 | [0.00, 1.00]\ndebt          |    format | 2.23e-03 | [0.00, 1.00]\nprofitability |    format |     0.02 | [0.00, 1.00]\n```\n:::\n:::\n\n\n\n## Post-hoc analyses\n\nWe can continue with descriptive discriminant analysis for the post-hoc comparisons. To fit the model using the `lda` function from the `MASS` package, we swap the role of the experimental factor and responses in the formula. The output shows the weights for the linear combinations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMASS::lda(format ~ prime + debt + profitability,\n          data = AVC02)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\nlda(format ~ prime + debt + profitability, data = AVC02)\n\nPrior probabilities of groups:\n        integrated note        stand-alone note modified auditor report \n              0.3030303               0.3409091               0.3560606 \n\nGroup means:\n                           prime     debt profitability\nintegrated note         1.181250 2.950000      2.725000\nstand-alone note        1.266667 2.822222      2.600000\nmodified auditor report 1.393617 2.872340      2.468085\n\nCoefficients of linear discriminants:\n                     LD1         LD2\nprime          0.5171202  0.16521149\ndebt           0.6529450  0.97286350\nprofitability -1.2016530 -0.04412713\n\nProportion of trace:\n   LD1    LD2 \n0.9257 0.0743 \n```\n:::\n:::\n\n\nInterpretation of these is beyond the scope of the course, but you can find information about linear discriminant analysis in good textbooks (TODO add reference).\n\n## Model assumptions\n\nThe next step before writing about any of our conclusions is to check the model assumptions. As before, we could check for each variable in turn whether the variance are the same in each group. Here, we rather check equality of covariance matrix. The test has typically limited power, but unfortunately is very sensitive to departure from the multivariate normality assumption, so sometimes rejection are false positive.\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(AVC02,\nbiotools::boxM(cbind(prime, debt, profitability),\n               grouping = format))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBox's M-test for Homogeneity of Covariance Matrices\n\ndata:  cbind(prime, debt, profitability)\nChi-Sq (approx.) = 21.274, df = 12, p-value = 0.0465\n```\n:::\n:::\n\n\nHere, there is a smallish $p$-value, so weak evidence against equality of covariance matrices. The data were generated from normal distribution, but the small $p$-value is an artifact of the rounding of the Likert scale.\n\nWe can test the normality assumption using univariate quantile-quantile plots or tests of normality, including Shapiro-Wilks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1,3)) # one row, 3 columns for plot layout\ncar::qqPlot(rstudent(model)[,1], \n            id = FALSE, # don't flag outliers\n            ylab = \"studentized residuals (prime)\")\ncar::qqPlot(rstudent(model)[,2], \n            id = FALSE, \n            ylab = \"studentized residuals (debt)\")\ncar::qqPlot(rstudent(model)[,3], \n            id = FALSE, \n            ylab = \"studentized residuals (profitability)\")\n```\n\n::: {.cell-output-display}\n![](manova_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nWe see severe rounding impacts for debt and profitability. There is little to be done about this, but the sample size are large enough that this shouldn't be too much a concern.\n\nWe can also test the multivariate normality assumption. The latter supposes that observations in each group have the same mean. To get this, we detrend using multivariate linear model by subtracting the mean of each group. Thus, our input is the matrix of residuals, which must be transposed for the function to be happy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmvnormtest::mshapiro.test(U = t(resid(model)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  Z\nW = 0.96982, p-value = 0.004899\n```\n:::\n:::\n\nThere is (unsurprisingly) strong evidence against multivariate normality, but it matters less due to sample size. This is a consequence of the discrete univariate measurements, which explain rejection of the null (for data to be multivariate normal, each of the response must be univariate normal and the dependence structure must also match.\n\nSince assumptions are doubtful, we recommend using Pilai's trace as test statistic for the MANOVA.\n\n",
    "supporting": [
      "manova_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}